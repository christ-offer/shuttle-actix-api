import{o as m,c as _,a as t,r as i,p as T,b as C,d as u,w as D,e as V,f,v as h,t as s,F as x,g as N,h as S,i as j,j as d,k as r}from"./runtime-dom.esm-bundler.e8279036.js";/* empty css                       */const I=(a,n)=>{const c=a.__vccOpts||a;for(const[e,o]of n)c[e]=o;return c},A={},b=a=>(T("data-v-cb92cc59"),a=a(),C(),a),L={class:"max"},W=b(()=>t("h4",null," Max ",-1)),F={class:"min"},B=b(()=>t("h4",null," Min ",-1)),P={class:"mean"},U=b(()=>t("h4",null," Average ",-1));function E(a,n){return m(),_("article",null,[t("h2",null,[i(a.$slots,"datapoint",{},void 0,!0)]),t("div",null,[t("section",L,[W,t("p",null,[i(a.$slots,"max-temp",{},void 0,!0)]),t("p",null,[i(a.$slots,"max-date",{},void 0,!0)])]),t("section",F,[B,t("p",null,[i(a.$slots,"min-temp",{},void 0,!0)]),t("p",null,[i(a.$slots,"min-date",{},void 0,!0)])]),t("section",P,[U,t("p",null,[i(a.$slots,"mean-temp",{},void 0,!0)]),t("p",null,[i(a.$slots,"mean-date",{},void 0,!0)])])])])}const G=I(A,[["render",E],["__scopeId","data-v-cb92cc59"]]),p=u({});let M=u(""),O=u(""),w=u(""),v=u(!1),g=u(""),y=u("");const J=[{label:"None",value:"none"},{label:"Ascending",value:"asc"},{label:"Descending",value:"desc"}];D(()=>g.value,(a,n)=>{console.log("Filter method changed",a,n)});D(()=>y.value,(a,n)=>{console.log("Sorting method changed",a,n)});const R=async(a,n,c)=>{p&&(p.value={}),v.value=!0;const o=await(await fetch("/api/openmeteo",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({city:a,start_date:n,end_date:c})})).json();v.value=!1,p.value=o},q=V({__name:"OpenMeteoIsland",setup(a,{expose:n}){n();const e={data:p,get city(){return M},set city(o){M=o},get start_date(){return O},set start_date(o){O=o},get end_date(){return w},set end_date(o){w=o},get loading(){return v},set loading(o){v=o},get filterOption(){return g},set filterOption(o){g=o},get sortDirection(){return y},set sortDirection(o){y=o},sortOptions:J,fetchOpenMeteo:R,filterOptions:[{label:"Temperature 2m Max",value:"temperature_2m_max"},{label:"Temperature 2m Min",value:"temperature_2m_min"},{label:"Temperature 2m Mean",value:"temperature_2m_mean"},{label:"Apparent Temperature Max",value:"apparent_temperature_max"},{label:"Apparent Temperature Min",value:"apparent_temperature_min"},{label:"Apparent Temperature Mean",value:"apparent_temperature_mean"},{label:"Precipitation Sum",value:"precipitation_sum"},{label:"Snowfall Sum",value:"snowfall_sum"},{label:"Shortwave Radiation Sum",value:"shortwave_radiation_sum"},{label:"Wind Speed 10m Max",value:"windspeed_10m_max"},{label:"Wind Gusts 10m Max",value:"windgusts_10m_max"}],WeatherCard:G};return Object.defineProperty(e,"__isScriptSetup",{enumerable:!1,value:!0}),e}}),k=a=>(T("data-v-684f03f4"),a=a(),C(),a),z={class:"input-container"},H={key:0},K={class:"instructions location-info"},Q=k(()=>t("h1",{class:"text-gradient"},"Selected stats:",-1)),X={class:"stat-list"},Y={key:1},Z=k(()=>t("p",null,"Loading...",-1)),$=[Z];function ee(a,n,c,e,o,te){return m(),_(x,null,[t("div",z,[f(t("input",{type:"text","onUpdate:modelValue":n[0]||(n[0]=l=>e.city=l),placeholder:"City",min:"01-01-1960",max:"01-01-2023",class:"instructions"},null,512),[[h,e.city]]),f(t("input",{type:"date","onUpdate:modelValue":n[1]||(n[1]=l=>e.start_date=l),class:"instructions"},null,512),[[h,e.start_date]]),f(t("input",{type:"date","onUpdate:modelValue":n[2]||(n[2]=l=>e.end_date=l),class:"instructions"},null,512),[[h,e.end_date]]),t("button",{class:"instructions",onClick:n[3]||(n[3]=l=>e.fetchOpenMeteo(e.city,e.start_date,e.end_date))},"Get Weather Statistics")]),e.data.latitude?(m(),_("div",H,[t("div",K,[t("p",null,"Location: "+s(e.city),1),t("p",null,"Start Date: "+s(e.start_date),1),t("p",null,"End Date: "+s(e.end_date),1),t("p",null,"Latitude: "+s(e.data.latitude),1),t("p",null,"Longitude: "+s(e.data.longitude),1)]),Q,t("div",X,[(m(),_(x,null,N(e.filterOptions,l=>j(e.WeatherCard,null,{datapoint:d(()=>[r(s(l.label),1)]),"max-temp":d(()=>[r(s(e.data.stats[l.value].max.value)+" "+s(e.data.daily_units[l.value]),1)]),"max-date":d(()=>[r(s(e.data.stats[l.value].max.time),1)]),"min-temp":d(()=>[r(s(e.data.stats[l.value].min.value)+" "+s(e.data.daily_units[l.value]),1)]),"min-date":d(()=>[r(s(e.data.stats[l.value].min.time),1)]),"mean-temp":d(()=>[r(s((Math.round(e.data.stats[l.value].mean.value*100)/100).toFixed(2))+" "+s(e.data.daily_units[l.value]),1)]),"mean-date":d(()=>[r(s(e.data.stats[l.value].mean.time),1)]),_:2},1024)),64))])])):S("",!0),e.loading?(m(),_("div",Y,$)):S("",!0)],64)}const le=I(q,[["render",ee],["__scopeId","data-v-684f03f4"]]);export{le as default};
